/*
* Copyright Â© 2011,2012  Google, Inc.
*
*  This is part of HarfBuzz, a text shaping library.
*
* Permission is hereby granted, without written agreement and without
* license or royalty fees, to use, copy, modify, and distribute this
* software and its documentation for any purpose, provided that the
* above copyright notice and the following two paragraphs appear in
* all copies of this software.
*
* IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR
* DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
* ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN
* IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
* DAMAGE.
*
* THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,
* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
* FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
* ON AN "AS IS" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO
* PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
*
* Google Author(s): Behdad Esfahbod
*/

#ifndef HB_OT_SHAPE_COMPLEX_INDIC_MACHINE_HH
#define HB_OT_SHAPE_COMPLEX_INDIC_MACHINE_HH

#include "hb.hh"


static const short _indic_syllable_machine_key_offsets[] = {
	0, 1, 6, 9, 10, 14, 17, 18,
	22, 25, 26, 30, 33, 34, 36, 37,
	38, 43, 44, 45, 50, 51, 52, 57,
	58, 59, 65, 70, 76, 81, 87, 92,
	98, 103, 109, 110, 115, 118, 119, 123,
	126, 127, 131, 134, 135, 139, 142, 143,
	145, 146, 147, 152, 153, 154, 159, 160,
	161, 166, 167, 168, 174, 179, 185, 190,
	196, 201, 207, 212, 218, 219, 224, 227,
	228, 232, 235, 236, 240, 243, 244, 248,
	251, 252, 254, 255, 256, 261, 262, 263,
	268, 269, 270, 275, 276, 277, 283, 288,
	294, 299, 305, 310, 316, 321, 322, 327,
	330, 331, 335, 338, 339, 343, 346, 347,
	351, 354, 355, 357, 358, 359, 364, 365,
	366, 371, 372, 373, 378, 379, 380, 386,
	391, 397, 402, 408, 413, 419, 424, 430,
	436, 440, 441, 458, 467, 475, 482, 488,
	497, 505, 512, 518, 527, 535, 542, 548,
	557, 565, 572, 578, 587, 595, 602, 606,
	610, 613, 614, 615, 616, 618, 623, 627,
	634, 640, 645, 652, 658, 663, 670, 676,
	681, 687, 692, 698, 706, 715, 722, 728,
	734, 742, 751, 758, 764, 770, 778, 787,
	794, 800, 806, 814, 823, 830, 836, 842,
	850, 859, 868, 876, 883, 889, 898, 906,
	913, 919, 928, 936, 943, 949, 958, 966,
	973, 979, 988, 996, 1003, 1007, 1011, 1014,
	1015, 1016, 1017, 1019, 1024, 1028, 1035, 1041,
	1046, 1053, 1059, 1064, 1071, 1077, 1082, 1088,
	1093, 1099, 1107, 1116, 1123, 1129, 1135, 1143,
	1152, 1159, 1165, 1171, 1179, 1188, 1195, 1201,
	1207, 1215, 1224, 1231, 1237, 1243, 1248, 1256,
	1264, 1271, 1277, 1286, 1294, 1301, 1307, 1316,
	1324, 1331, 1337, 1346, 1354, 1361, 1367, 1376,
	1384, 1391, 1395, 1399, 1402, 1403, 1404, 1405,
	1407, 1412, 1416, 1423, 1429, 1434, 1441, 1447,
	1452, 1459, 1465, 1470, 1476, 1481, 1487, 1495,
	1504, 1511, 1517, 1523, 1531, 1540, 1547, 1553,
	1559, 1567, 1576, 1583, 1589, 1595, 1603, 1612,
	1619, 1625, 1631, 1637, 1645, 1650, 1659, 1667,
	1674, 1680, 1689, 1697, 1704, 1710, 1719, 1727,
	1734, 1740, 1749, 1757, 1764, 1770, 1779, 1787,
	1794, 1798, 1802, 1805, 1806, 1807, 1808, 1810,
	1815, 1819, 1826, 1832, 1837, 1844, 1850, 1855,
	1862, 1868, 1873, 1879, 1884, 1890, 1898, 1907,
	1914, 1920, 1926, 1934, 1943, 1950, 1956, 1962,
	1970, 1979, 1986, 1992, 1998, 2006, 2015, 2022,
	2028, 2034, 2042, 2056, 2065, 2078, 2085, 2088,
	2089, 2090, 2091, 2093, 2102, 2107, 2111, 2114,
	2115, 2116, 2117, 2119, 0
};

static const unsigned char _indic_syllable_machine_trans_keys[] = {
	8u, 4u, 7u, 8u, 5u, 6u, 7u, 5u,
	6u, 7u, 7u, 8u, 5u, 6u, 7u, 5u,
	6u, 7u, 7u, 8u, 5u, 6u, 7u, 5u,
	6u, 7u, 7u, 8u, 5u, 6u, 7u, 5u,
	6u, 7u, 4u, 8u, 6u, 16u, 4u, 7u,
	8u, 5u, 6u, 6u, 16u, 4u, 7u, 8u,
	5u, 6u, 6u, 16u, 4u, 7u, 8u, 5u,
	6u, 6u, 16u, 4u, 7u, 8u, 13u, 5u,
	6u, 4u, 7u, 8u, 5u, 6u, 4u, 7u,
	8u, 13u, 5u, 6u, 4u, 7u, 8u, 5u,
	6u, 4u, 7u, 8u, 13u, 5u, 6u, 4u,
	7u, 8u, 5u, 6u, 4u, 7u, 8u, 13u,
	5u, 6u, 4u, 7u, 8u, 5u, 6u, 4u,
	7u, 8u, 13u, 5u, 6u, 8u, 4u, 7u,
	8u, 5u, 6u, 7u, 5u, 6u, 7u, 7u,
	8u, 5u, 6u, 7u, 5u, 6u, 7u, 7u,
	8u, 5u, 6u, 7u, 5u, 6u, 7u, 7u,
	8u, 5u, 6u, 7u, 5u, 6u, 7u, 4u,
	8u, 6u, 16u, 4u, 7u, 8u, 5u, 6u,
	6u, 16u, 4u, 7u, 8u, 5u, 6u, 6u,
	16u, 4u, 7u, 8u, 5u, 6u, 6u, 16u,
	4u, 7u, 8u, 13u, 5u, 6u, 4u, 7u,
	8u, 5u, 6u, 4u, 7u, 8u, 13u, 5u,
	6u, 4u, 7u, 8u, 5u, 6u, 4u, 7u,
	8u, 13u, 5u, 6u, 4u, 7u, 8u, 5u,
	6u, 4u, 7u, 8u, 13u, 5u, 6u, 4u,
	7u, 8u, 5u, 6u, 4u, 7u, 8u, 13u,
	5u, 6u, 8u, 4u, 7u, 8u, 5u, 6u,
	7u, 5u, 6u, 7u, 7u, 8u, 5u, 6u,
	7u, 5u, 6u, 7u, 7u, 8u, 5u, 6u,
	7u, 5u, 6u, 7u, 7u, 8u, 5u, 6u,
	7u, 5u, 6u, 7u, 4u, 8u, 6u, 16u,
	4u, 7u, 8u, 5u, 6u, 6u, 16u, 4u,
	7u, 8u, 5u, 6u, 6u, 16u, 4u, 7u,
	8u, 5u, 6u, 6u, 16u, 4u, 7u, 8u,
	13u, 5u, 6u, 4u, 7u, 8u, 5u, 6u,
	4u, 7u, 8u, 13u, 5u, 6u, 4u, 7u,
	8u, 5u, 6u, 4u, 7u, 8u, 13u, 5u,
	6u, 4u, 7u, 8u, 5u, 6u, 4u, 7u,
	8u, 13u, 5u, 6u, 4u, 7u, 8u, 5u,
	6u, 8u, 4u, 7u, 8u, 5u, 6u, 7u,
	5u, 6u, 7u, 7u, 8u, 5u, 6u, 7u,
	5u, 6u, 7u, 7u, 8u, 5u, 6u, 7u,
	5u, 6u, 7u, 7u, 8u, 5u, 6u, 7u,
	5u, 6u, 7u, 4u, 8u, 6u, 16u, 4u,
	7u, 8u, 5u, 6u, 6u, 16u, 4u, 7u,
	8u, 5u, 6u, 6u, 16u, 4u, 7u, 8u,
	5u, 6u, 6u, 16u, 4u, 7u, 8u, 13u,
	5u, 6u, 4u, 7u, 8u, 5u, 6u, 4u,
	7u, 8u, 13u, 5u, 6u, 4u, 7u, 8u,
	5u, 6u, 4u, 7u, 8u, 13u, 5u, 6u,
	4u, 7u, 8u, 5u, 6u, 4u, 7u, 8u,
	13u, 5u, 6u, 4u, 7u, 8u, 5u, 6u,
	4u, 7u, 8u, 13u, 5u, 6u, 4u, 7u,
	8u, 13u, 5u, 6u, 7u, 8u, 5u, 6u,
	8u, 1u, 2u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 13u, 15u, 16u, 17u, 18u, 19u,
	11u, 12u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 13u, 17u, 3u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 1u, 5u, 6u, 8u, 10u, 16u,
	3u, 4u, 5u, 6u, 7u, 8u, 10u, 13u,
	17u, 3u, 4u, 7u, 8u, 10u, 17u, 5u,
	6u, 4u, 7u, 8u, 10u, 17u, 5u, 6u,
	1u, 5u, 6u, 8u, 10u, 16u, 3u, 4u,
	5u, 6u, 7u, 8u, 10u, 13u, 17u, 3u,
	4u, 7u, 8u, 10u, 17u, 5u, 6u, 4u,
	7u, 8u, 10u, 17u, 5u, 6u, 1u, 5u,
	6u, 8u, 10u, 16u, 3u, 4u, 5u, 6u,
	7u, 8u, 10u, 13u, 17u, 3u, 4u, 7u,
	8u, 10u, 17u, 5u, 6u, 4u, 7u, 8u,
	10u, 17u, 5u, 6u, 1u, 5u, 6u, 8u,
	10u, 16u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 13u, 17u, 3u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 5u, 6u, 8u, 10u, 8u, 10u,
	5u, 6u, 5u, 8u, 10u, 10u, 10u, 10u,
	5u, 10u, 3u, 8u, 10u, 5u, 6u, 5u,
	6u, 8u, 10u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 4u, 5u, 6u, 7u, 8u, 10u,
	7u, 8u, 10u, 5u, 6u, 3u, 4u, 5u,
	6u, 7u, 8u, 10u, 4u, 5u, 6u, 7u,
	8u, 10u, 7u, 8u, 10u, 5u, 6u, 3u,
	4u, 5u, 6u, 7u, 8u, 10u, 4u, 5u,
	6u, 7u, 8u, 10u, 7u, 8u, 10u, 5u,
	6u, 3u, 4u, 5u, 6u, 8u, 10u, 4u,
	5u, 6u, 8u, 10u, 4u, 7u, 8u, 10u,
	5u, 6u, 3u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 13u, 17u, 1u, 3u, 8u, 10u, 16u,
	5u, 6u, 1u, 8u, 10u, 16u, 5u, 6u,
	1u, 5u, 6u, 8u, 10u, 16u, 3u, 4u,
	7u, 8u, 10u, 17u, 5u, 6u, 3u, 4u,
	5u, 6u, 7u, 8u, 10u, 13u, 17u, 1u,
	3u, 8u, 10u, 16u, 5u, 6u, 1u, 8u,
	10u, 16u, 5u, 6u, 1u, 5u, 6u, 8u,
	10u, 16u, 3u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 13u, 17u, 1u, 3u, 8u, 10u, 16u,
	5u, 6u, 1u, 8u, 10u, 16u, 5u, 6u,
	1u, 5u, 6u, 8u, 10u, 16u, 3u, 4u,
	7u, 8u, 10u, 17u, 5u, 6u, 3u, 4u,
	5u, 6u, 7u, 8u, 10u, 13u, 17u, 1u,
	3u, 8u, 10u, 16u, 5u, 6u, 1u, 8u,
	10u, 16u, 5u, 6u, 1u, 5u, 6u, 8u,
	10u, 16u, 3u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 13u, 17u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 13u, 17u, 3u, 4u, 5u, 6u,
	7u, 8u, 10u, 17u, 4u, 5u, 6u, 7u,
	8u, 10u, 17u, 1u, 5u, 6u, 8u, 10u,
	16u, 3u, 4u, 5u, 6u, 7u, 8u, 10u,
	13u, 17u, 3u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 4u, 7u, 8u, 10u, 17u, 5u,
	6u, 1u, 5u, 6u, 8u, 10u, 16u, 3u,
	4u, 5u, 6u, 7u, 8u, 10u, 13u, 17u,
	3u, 4u, 7u, 8u, 10u, 17u, 5u, 6u,
	4u, 7u, 8u, 10u, 17u, 5u, 6u, 1u,
	5u, 6u, 8u, 10u, 16u, 3u, 4u, 5u,
	6u, 7u, 8u, 10u, 13u, 17u, 3u, 4u,
	7u, 8u, 10u, 17u, 5u, 6u, 4u, 7u,
	8u, 10u, 17u, 5u, 6u, 1u, 5u, 6u,
	8u, 10u, 16u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 13u, 17u, 3u, 4u, 7u, 8u,
	10u, 17u, 5u, 6u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 5u, 6u, 8u, 10u, 8u,
	10u, 5u, 6u, 5u, 8u, 10u, 10u, 10u,
	10u, 5u, 10u, 3u, 8u, 10u, 5u, 6u,
	5u, 6u, 8u, 10u, 3u, 4u, 5u, 6u,
	7u, 8u, 10u, 4u, 5u, 6u, 7u, 8u,
	10u, 7u, 8u, 10u, 5u, 6u, 3u, 4u,
	5u, 6u, 7u, 8u, 10u, 4u, 5u, 6u,
	7u, 8u, 10u, 7u, 8u, 10u, 5u, 6u,
	3u, 4u, 5u, 6u, 7u, 8u, 10u, 4u,
	5u, 6u, 7u, 8u, 10u, 7u, 8u, 10u,
	5u, 6u, 3u, 4u, 5u, 6u, 8u, 10u,
	4u, 5u, 6u, 8u, 10u, 4u, 7u, 8u,
	10u, 5u, 6u, 3u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 13u, 17u, 1u, 3u, 8u, 10u,
	16u, 5u, 6u, 1u, 8u, 10u, 16u, 5u,
	6u, 1u, 5u, 6u, 8u, 10u, 16u, 3u,
	4u, 7u, 8u, 10u, 17u, 5u, 6u, 3u,
	4u, 5u, 6u, 7u, 8u, 10u, 13u, 17u,
	1u, 3u, 8u, 10u, 16u, 5u, 6u, 1u,
	8u, 10u, 16u, 5u, 6u, 1u, 5u, 6u,
	8u, 10u, 16u, 3u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 13u, 17u, 1u, 3u, 8u, 10u,
	16u, 5u, 6u, 1u, 8u, 10u, 16u, 5u,
	6u, 1u, 5u, 6u, 8u, 10u, 16u, 3u,
	4u, 7u, 8u, 10u, 17u, 5u, 6u, 3u,
	4u, 5u, 6u, 7u, 8u, 10u, 13u, 17u,
	1u, 3u, 8u, 10u, 16u, 5u, 6u, 1u,
	8u, 10u, 16u, 5u, 6u, 1u, 5u, 6u,
	8u, 10u, 16u, 4u, 7u, 8u, 5u, 6u,
	3u, 4u, 5u, 6u, 7u, 8u, 10u, 17u,
	3u, 4u, 7u, 8u, 10u, 17u, 5u, 6u,
	4u, 7u, 8u, 10u, 17u, 5u, 6u, 1u,
	5u, 6u, 8u, 10u, 16u, 3u, 4u, 5u,
	6u, 7u, 8u, 10u, 13u, 17u, 3u, 4u,
	7u, 8u, 10u, 17u, 5u, 6u, 4u, 7u,
	8u, 10u, 17u, 5u, 6u, 1u, 5u, 6u,
	8u, 10u, 16u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 13u, 17u, 3u, 4u, 7u, 8u,
	10u, 17u, 5u, 6u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 1u, 5u, 6u, 8u, 10u,
	16u, 3u, 4u, 5u, 6u, 7u, 8u, 10u,
	13u, 17u, 3u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 4u, 7u, 8u, 10u, 17u, 5u,
	6u, 1u, 5u, 6u, 8u, 10u, 16u, 3u,
	4u, 5u, 6u, 7u, 8u, 10u, 13u, 17u,
	3u, 4u, 7u, 8u, 10u, 17u, 5u, 6u,
	4u, 7u, 8u, 10u, 17u, 5u, 6u, 5u,
	6u, 8u, 10u, 8u, 10u, 5u, 6u, 5u,
	8u, 10u, 10u, 10u, 10u, 5u, 10u, 3u,
	8u, 10u, 5u, 6u, 5u, 6u, 8u, 10u,
	3u, 4u, 5u, 6u, 7u, 8u, 10u, 4u,
	5u, 6u, 7u, 8u, 10u, 7u, 8u, 10u,
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 4u, 5u, 6u, 7u, 8u, 10u, 7u,
	8u, 10u, 5u, 6u, 3u, 4u, 5u, 6u,
	7u, 8u, 10u, 4u, 5u, 6u, 7u, 8u,
	10u, 7u, 8u, 10u, 5u, 6u, 3u, 4u,
	5u, 6u, 8u, 10u, 4u, 5u, 6u, 8u,
	10u, 4u, 7u, 8u, 10u, 5u, 6u, 3u,
	4u, 7u, 8u, 10u, 17u, 5u, 6u, 3u,
	4u, 5u, 6u, 7u, 8u, 10u, 13u, 17u,
	1u, 3u, 8u, 10u, 16u, 5u, 6u, 1u,
	8u, 10u, 16u, 5u, 6u, 1u, 5u, 6u,
	8u, 10u, 16u, 3u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 13u, 17u, 1u, 3u, 8u, 10u,
	16u, 5u, 6u, 1u, 8u, 10u, 16u, 5u,
	6u, 1u, 5u, 6u, 8u, 10u, 16u, 3u,
	4u, 7u, 8u, 10u, 17u, 5u, 6u, 3u,
	4u, 5u, 6u, 7u, 8u, 10u, 13u, 17u,
	1u, 3u, 8u, 10u, 16u, 5u, 6u, 1u,
	8u, 10u, 16u, 5u, 6u, 1u, 5u, 6u,
	8u, 10u, 16u, 3u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 13u, 17u, 1u, 3u, 8u, 10u,
	16u, 5u, 6u, 1u, 8u, 10u, 16u, 5u,
	6u, 1u, 5u, 6u, 8u, 10u, 16u, 4u,
	7u, 8u, 13u, 5u, 6u, 3u, 4u, 7u,
	8u, 10u, 17u, 5u, 6u, 4u, 7u, 8u,
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 13u, 17u, 3u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 1u, 5u, 6u, 8u, 10u, 16u,
	3u, 4u, 5u, 6u, 7u, 8u, 10u, 13u,
	17u, 3u, 4u, 7u, 8u, 10u, 17u, 5u,
	6u, 4u, 7u, 8u, 10u, 17u, 5u, 6u,
	1u, 5u, 6u, 8u, 10u, 16u, 3u, 4u,
	5u, 6u, 7u, 8u, 10u, 13u, 17u, 3u,
	4u, 7u, 8u, 10u, 17u, 5u, 6u, 4u,
	7u, 8u, 10u, 17u, 5u, 6u, 1u, 5u,
	6u, 8u, 10u, 16u, 3u, 4u, 5u, 6u,
	7u, 8u, 10u, 13u, 17u, 3u, 4u, 7u,
	8u, 10u, 17u, 5u, 6u, 4u, 7u, 8u,
	10u, 17u, 5u, 6u, 1u, 5u, 6u, 8u,
	10u, 16u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 13u, 17u, 3u, 4u, 7u, 8u, 10u,
	17u, 5u, 6u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 5u, 6u, 8u, 10u, 8u, 10u,
	5u, 6u, 5u, 8u, 10u, 10u, 10u, 10u,
	5u, 10u, 3u, 8u, 10u, 5u, 6u, 5u,
	6u, 8u, 10u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 4u, 5u, 6u, 7u, 8u, 10u,
	7u, 8u, 10u, 5u, 6u, 3u, 4u, 5u,
	6u, 7u, 8u, 10u, 4u, 5u, 6u, 7u,
	8u, 10u, 7u, 8u, 10u, 5u, 6u, 3u,
	4u, 5u, 6u, 7u, 8u, 10u, 4u, 5u,
	6u, 7u, 8u, 10u, 7u, 8u, 10u, 5u,
	6u, 3u, 4u, 5u, 6u, 8u, 10u, 4u,
	5u, 6u, 8u, 10u, 4u, 7u, 8u, 10u,
	5u, 6u, 3u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 13u, 17u, 1u, 3u, 8u, 10u, 16u,
	5u, 6u, 1u, 8u, 10u, 16u, 5u, 6u,
	1u, 5u, 6u, 8u, 10u, 16u, 3u, 4u,
	7u, 8u, 10u, 17u, 5u, 6u, 3u, 4u,
	5u, 6u, 7u, 8u, 10u, 13u, 17u, 1u,
	3u, 8u, 10u, 16u, 5u, 6u, 1u, 8u,
	10u, 16u, 5u, 6u, 1u, 5u, 6u, 8u,
	10u, 16u, 3u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 3u, 4u, 5u, 6u, 7u, 8u,
	10u, 13u, 17u, 1u, 3u, 8u, 10u, 16u,
	5u, 6u, 1u, 8u, 10u, 16u, 5u, 6u,
	1u, 5u, 6u, 8u, 10u, 16u, 3u, 4u,
	7u, 8u, 10u, 17u, 5u, 6u, 3u, 4u,
	5u, 6u, 7u, 8u, 10u, 13u, 17u, 1u,
	3u, 8u, 10u, 16u, 5u, 6u, 1u, 8u,
	10u, 16u, 5u, 6u, 1u, 5u, 6u, 8u,
	10u, 16u, 3u, 4u, 7u, 8u, 10u, 17u,
	5u, 6u, 1u, 2u, 3u, 4u, 5u, 6u,
	7u, 8u, 10u, 13u, 16u, 17u, 11u, 12u,
	3u, 4u, 5u, 6u, 7u, 8u, 10u, 13u,
	17u, 1u, 2u, 3u, 4u, 5u, 6u, 7u,
	8u, 10u, 12u, 13u, 16u, 17u, 4u, 7u,
	8u, 10u, 13u, 5u, 6u, 5u, 8u, 10u,
	10u, 10u, 10u, 5u, 10u, 1u, 3u, 4u,
	7u, 8u, 10u, 16u, 5u, 6u, 3u, 8u,
	10u, 5u, 6u, 8u, 10u, 5u, 6u, 5u,
	8u, 10u, 10u, 10u, 10u, 5u, 10u, 1u,
	11u, 16u, 0u
};

static const char _indic_syllable_machine_single_lengths[] = {
	1, 3, 1, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 1,
	3, 1, 1, 3, 1, 1, 3, 1,
	1, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 1, 3, 1, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 1, 2,
	1, 1, 3, 1, 1, 3, 1, 1,
	3, 1, 1, 4, 3, 4, 3, 4,
	3, 4, 3, 4, 1, 3, 1, 1,
	2, 1, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 1, 3, 1, 1, 3,
	1, 1, 3, 1, 1, 4, 3, 4,
	3, 4, 3, 4, 3, 1, 3, 1,
	1, 2, 1, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 1, 3, 1, 1,
	3, 1, 1, 3, 1, 1, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 4,
	2, 1, 15, 9, 6, 5, 6, 9,
	6, 5, 6, 9, 6, 5, 6, 9,
	6, 5, 6, 9, 6, 5, 4, 2,
	3, 1, 1, 1, 2, 3, 4, 7,
	6, 3, 7, 6, 3, 7, 6, 3,
	6, 5, 4, 6, 9, 5, 4, 6,
	6, 9, 5, 4, 6, 6, 9, 5,
	4, 6, 6, 9, 5, 4, 6, 6,
	9, 9, 8, 7, 6, 9, 6, 5,
	6, 9, 6, 5, 6, 9, 6, 5,
	6, 9, 6, 5, 4, 2, 3, 1,
	1, 1, 2, 3, 4, 7, 6, 3,
	7, 6, 3, 7, 6, 3, 6, 5,
	4, 6, 9, 5, 4, 6, 6, 9,
	5, 4, 6, 6, 9, 5, 4, 6,
	6, 9, 5, 4, 6, 3, 8, 6,
	5, 6, 9, 6, 5, 6, 9, 6,
	5, 6, 9, 6, 5, 6, 9, 6,
	5, 4, 2, 3, 1, 1, 1, 2,
	3, 4, 7, 6, 3, 7, 6, 3,
	7, 6, 3, 6, 5, 4, 6, 9,
	5, 4, 6, 6, 9, 5, 4, 6,
	6, 9, 5, 4, 6, 6, 9, 5,
	4, 6, 4, 6, 3, 9, 6, 5,
	6, 9, 6, 5, 6, 9, 6, 5,
	6, 9, 6, 5, 6, 9, 6, 5,
	4, 2, 3, 1, 1, 1, 2, 3,
	4, 7, 6, 3, 7, 6, 3, 7,
	6, 3, 6, 5, 4, 6, 9, 5,
	4, 6, 6, 9, 5, 4, 6, 6,
	9, 5, 4, 6, 6, 9, 5, 4,
	6, 6, 12, 9, 13, 5, 3, 1,
	1, 1, 2, 7, 3, 2, 3, 1,
	1, 1, 2, 3, 0
};

static const char _indic_syllable_machine_range_lengths[] = {
	0, 1, 1, 0, 1, 1, 0, 1,
	1, 0, 1, 1, 0, 0, 0, 0,
	1, 0, 0, 1, 0, 0, 1, 0,
	0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 1, 0, 0,
	0, 0, 1, 0, 0, 1, 0, 0,
	1, 0, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 1, 0, 1, 1,
	0, 0, 0, 0, 1, 0, 0, 1,
	0, 0, 1, 0, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 1, 0, 1,
	1, 0, 0, 0, 0, 1, 0, 0,
	1, 0, 0, 1, 0, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 0, 0,
	1, 1, 0, 0, 1, 1, 0, 0,
	1, 1, 0, 0, 1, 1, 0, 1,
	0, 0, 0, 0, 0, 1, 0, 0,
	0, 1, 0, 0, 1, 0, 0, 1,
	0, 0, 1, 1, 0, 1, 1, 0,
	1, 0, 1, 1, 0, 1, 0, 1,
	1, 0, 1, 0, 1, 1, 0, 1,
	0, 0, 0, 0, 0, 0, 1, 1,
	0, 0, 1, 1, 0, 0, 1, 1,
	0, 0, 1, 1, 0, 1, 0, 0,
	0, 0, 0, 1, 0, 0, 0, 1,
	0, 0, 1, 0, 0, 1, 0, 0,
	1, 1, 0, 1, 1, 0, 1, 0,
	1, 1, 0, 1, 0, 1, 1, 0,
	1, 0, 1, 1, 0, 1, 0, 1,
	1, 0, 0, 1, 1, 0, 0, 1,
	1, 0, 0, 1, 1, 0, 0, 1,
	1, 0, 1, 0, 0, 0, 0, 0,
	1, 0, 0, 0, 1, 0, 0, 1,
	0, 0, 1, 0, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 1, 0,
	1, 0, 1, 1, 0, 1, 0, 1,
	1, 0, 1, 1, 1, 0, 1, 1,
	0, 0, 1, 1, 0, 0, 1, 1,
	0, 0, 1, 1, 0, 0, 1, 1,
	0, 1, 0, 0, 0, 0, 0, 1,
	0, 0, 0, 1, 0, 0, 1, 0,
	0, 1, 0, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 1, 0, 1,
	0, 1, 1, 0, 1, 0, 1, 1,
	0, 1, 1, 0, 0, 1, 0, 0,
	0, 0, 0, 1, 1, 1, 0, 0,
	0, 0, 0, 0, 0
};

static const short _indic_syllable_machine_index_offsets[] = {
	0, 2, 7, 10, 12, 16, 19, 21,
	25, 28, 30, 34, 37, 39, 42, 44,
	46, 51, 53, 55, 60, 62, 64, 69,
	71, 73, 79, 84, 90, 95, 101, 106,
	112, 117, 123, 125, 130, 133, 135, 139,
	142, 144, 148, 151, 153, 157, 160, 162,
	165, 167, 169, 174, 176, 178, 183, 185,
	187, 192, 194, 196, 202, 207, 213, 218,
	224, 229, 235, 240, 246, 248, 253, 256,
	258, 262, 265, 267, 271, 274, 276, 280,
	283, 285, 288, 290, 292, 297, 299, 301,
	306, 308, 310, 315, 317, 319, 325, 330,
	336, 341, 347, 352, 358, 363, 365, 370,
	373, 375, 379, 382, 384, 388, 391, 393,
	397, 400, 402, 405, 407, 409, 414, 416,
	418, 423, 425, 427, 432, 434, 436, 442,
	447, 453, 458, 464, 469, 475, 480, 486,
	492, 496, 498, 515, 525, 533, 540, 547,
	557, 565, 572, 579, 589, 597, 604, 611,
	621, 629, 636, 643, 653, 661, 668, 673,
	677, 681, 683, 685, 687, 690, 695, 700,
	708, 715, 720, 728, 735, 740, 748, 755,
	760, 767, 773, 779, 787, 797, 804, 810,
	817, 825, 835, 842, 848, 855, 863, 873,
	880, 886, 893, 901, 911, 918, 924, 931,
	939, 949, 959, 968, 976, 983, 993, 1001,
	1008, 1015, 1025, 1033, 1040, 1047, 1057, 1065,
	1072, 1079, 1089, 1097, 1104, 1109, 1113, 1117,
	1119, 1121, 1123, 1126, 1131, 1136, 1144, 1151,
	1156, 1164, 1171, 1176, 1184, 1191, 1196, 1203,
	1209, 1215, 1223, 1233, 1240, 1246, 1253, 1261,
	1271, 1278, 1284, 1291, 1299, 1309, 1316, 1322,
	1329, 1337, 1347, 1354, 1360, 1367, 1372, 1381,
	1389, 1396, 1403, 1413, 1421, 1428, 1435, 1445,
	1453, 1460, 1467, 1477, 1485, 1492, 1499, 1509,
	1517, 1524, 1529, 1533, 1537, 1539, 1541, 1543,
	1546, 1551, 1556, 1564, 1571, 1576, 1584, 1591,
	1596, 1604, 1611, 1616, 1623, 1629, 1635, 1643,
	1653, 1660, 1666, 1673, 1681, 1691, 1698, 1704,
	1711, 1719, 1729, 1736, 1742, 1749, 1757, 1767,
	1774, 1780, 1787, 1793, 1801, 1806, 1816, 1824,
	1831, 1838, 1848, 1856, 1863, 1870, 1880, 1888,
	1895, 1902, 1912, 1920, 1927, 1934, 1944, 1952,
	1959, 1964, 1968, 1972, 1974, 1976, 1978, 1981,
	1986, 1991, 1999, 2006, 2011, 2019, 2026, 2031,
	2039, 2046, 2051, 2058, 2064, 2070, 2078, 2088,
	2095, 2101, 2108, 2116, 2126, 2133, 2139, 2146,
	2154, 2164, 2171, 2177, 2184, 2192, 2202, 2209,
	2215, 2222, 2230, 2244, 2254, 2268, 2275, 2279,
	2281, 2283, 2285, 2288, 2297, 2302, 2306, 2310,
	2312, 2314, 2316, 2319, 0
};

static const char _indic_syllable_machine_trans_cond_spaces[] = {
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 0
};

static const short _indic_syllable_machine_trans_offsets[] = {
	0, 1, 2, 3, 4, 5, 6, 7,
	8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 20, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79,
	80, 81, 82, 83, 84, 85, 86, 87,
	88, 89, 90, 91, 92, 93, 94, 95,
	96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119,
	120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 284, 285, 286, 287,
	288, 289, 290, 291, 292, 293, 294, 295,
	296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 307, 308, 309, 310, 311,
	312, 313, 314, 315, 316, 317, 318, 319,
	320, 321, 322, 323, 324, 325, 326, 327,
	328, 329, 330, 331, 332, 333, 334, 335,
	336, 337, 338, 339, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 364, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911,
	912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943,
	944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719,
	2720, 2721, 2722, 2723, 2724, 2725, 0
};

static const char _indic_syllable_machine_trans_lengths[] = {
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0
};

static const char _indic_syllable_machine_cond_keys[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0
};

static const short _indic_syllable_machine_cond_targs[] = {
	160, 138, 166, 167, 160, 2, 138, 167,
	3, 138, 167, 138, 170, 160, 5, 138,
	170, 6, 138, 170, 138, 173, 160, 8,
	138, 173, 9, 138, 173, 138, 176, 160,
	11, 138, 176, 12, 138, 176, 138, 14,
	160, 138, 15, 138, 159, 138, 17, 176,
	160, 11, 138, 18, 138, 175, 138, 20,
	173, 160, 8, 138, 21, 138, 172, 138,
	23, 170, 160, 5, 138, 24, 138, 169,
	138, 166, 167, 160, 179, 2, 138, 183,
	167, 160, 2, 138, 183, 167, 160, 184,
	2, 138, 188, 167, 160, 2, 138, 188,
	167, 160, 189, 2, 138, 193, 167, 160,
	2, 138, 193, 167, 160, 194, 2, 138,
	198, 167, 160, 2, 138, 198, 167, 160,
	199, 2, 138, 222, 138, 228, 229, 222,
	36, 138, 229, 37, 138, 229, 138, 232,
	222, 39, 138, 232, 40, 138, 232, 138,
	235, 222, 42, 138, 235, 43, 138, 235,
	138, 238, 222, 45, 138, 238, 46, 138,
	238, 138, 48, 222, 138, 49, 138, 221,
	138, 51, 238, 222, 45, 138, 52, 138,
	237, 138, 54, 235, 222, 42, 138, 55,
	138, 234, 138, 57, 232, 222, 39, 138,
	58, 138, 231, 138, 228, 229, 222, 241,
	36, 138, 245, 229, 222, 36, 138, 245,
	229, 222, 246, 36, 138, 250, 229, 222,
	36, 138, 250, 229, 222, 251, 36, 138,
	255, 229, 222, 36, 138, 255, 229, 222,
	256, 36, 138, 260, 229, 222, 36, 138,
	260, 229, 222, 262, 36, 138, 283, 138,
	289, 290, 283, 70, 138, 290, 71, 138,
	290, 138, 293, 283, 73, 138, 293, 74,
	138, 293, 138, 296, 283, 76, 138, 296,
	77, 138, 296, 138, 299, 283, 79, 138,
	299, 80, 138, 299, 138, 82, 283, 138,
	83, 138, 282, 138, 85, 299, 283, 79,
	138, 86, 138, 298, 138, 88, 296, 283,
	76, 138, 89, 138, 295, 138, 91, 293,
	283, 73, 138, 92, 138, 292, 138, 289,
	290, 283, 302, 70, 138, 306, 290, 283,
	70, 138, 306, 290, 283, 307, 70, 138,
	311, 290, 283, 70, 138, 311, 290, 283,
	312, 70, 138, 316, 290, 283, 70, 138,
	316, 290, 283, 317, 70, 138, 321, 290,
	283, 70, 138, 346, 138, 352, 353, 346,
	103, 138, 353, 104, 138, 353, 138, 356,
	346, 106, 138, 356, 107, 138, 356, 138,
	359, 346, 109, 138, 359, 110, 138, 359,
	138, 362, 346, 112, 138, 362, 113, 138,
	362, 138, 115, 346, 138, 116, 138, 345,
	138, 118, 362, 346, 112, 138, 119, 138,
	361, 138, 121, 359, 346, 109, 138, 122,
	138, 358, 138, 124, 356, 346, 106, 138,
	125, 138, 355, 138, 352, 353, 346, 365,
	103, 138, 369, 353, 346, 103, 138, 369,
	353, 346, 370, 103, 138, 374, 353, 346,
	103, 138, 374, 353, 346, 375, 103, 138,
	379, 353, 346, 103, 138, 379, 353, 346,
	380, 103, 138, 384, 353, 346, 103, 138,
	384, 353, 346, 385, 103, 138, 321, 290,
	283, 323, 70, 138, 290, 160, 71, 138,
	398, 138, 139, 201, 263, 265, 322, 324,
	290, 283, 285, 323, 386, 387, 301, 396,
	403, 325, 138, 140, 142, 33, 200, 167,
	160, 162, 199, 178, 138, 141, 142, 167,
	160, 162, 178, 32, 138, 142, 167, 160,
	162, 178, 32, 138, 143, 159, 196, 160,
	162, 143, 138, 144, 146, 31, 195, 167,
	160, 162, 194, 178, 138, 145, 146, 167,
	160, 162, 178, 30, 138, 146, 167, 160,
	162, 178, 30, 138, 147, 159, 191, 160,
	162, 147, 138, 148, 150, 29, 190, 167,
	160, 162, 189, 178, 138, 149, 150, 167,
	160, 162, 178, 28, 138, 150, 167, 160,
	162, 178, 28, 138, 151, 159, 186, 160,
	162, 151, 138, 152, 154, 27, 185, 167,
	160, 162, 184, 178, 138, 153, 154, 167,
	160, 162, 178, 26, 138, 154, 167, 160,
	162, 178, 26, 138, 155, 159, 181, 160,
	162, 155, 138, 156, 158, 25, 180, 167,
	160, 162, 179, 178, 138, 157, 158, 167,
	160, 162, 178, 1, 138, 158, 167, 160,
	162, 178, 1, 138, 159, 165, 160, 162,
	138, 160, 162, 0, 138, 161, 164, 162,
	138, 162, 138, 163, 138, 138, 138, 161,
	162, 138, 159, 160, 162, 0, 138, 0,
	165, 160, 162, 138, 168, 169, 4, 22,
	170, 160, 162, 138, 169, 4, 22, 170,
	160, 162, 138, 170, 160, 162, 4, 138,
	171, 172, 7, 19, 173, 160, 162, 138,
	172, 7, 19, 173, 160, 162, 138, 173,
	160, 162, 7, 138, 174, 175, 10, 16,
	176, 160, 162, 138, 175, 10, 16, 176,
	160, 162, 138, 176, 160, 162, 10, 138,
	177, 159, 0, 13, 160, 162, 138, 159,
	0, 13, 160, 162, 138, 158, 167, 160,
	162, 1, 138, 156, 158, 167, 160, 162,
	178, 1, 138, 156, 158, 25, 1, 167,
	160, 162, 179, 178, 138, 155, 182, 160,
	162, 155, 0, 138, 155, 160, 162, 155,
	0, 138, 155, 0, 181, 160, 162, 155,
	138, 152, 154, 167, 160, 162, 178, 26,
	138, 152, 154, 27, 26, 167, 160, 162,
	184, 178, 138, 151, 187, 160, 162, 151,
	0, 138, 151, 160, 162, 151, 0, 138,
	151, 0, 186, 160, 162, 151, 138, 148,
	150, 167, 160, 162, 178, 28, 138, 148,
	150, 29, 28, 167, 160, 162, 189, 178,
	138, 147, 192, 160, 162, 147, 0, 138,
	147, 160, 162, 147, 0, 138, 147, 0,
	191, 160, 162, 147, 138, 144, 146, 167,
	160, 162, 178, 30, 138, 144, 146, 31,
	30, 167, 160, 162, 194, 178, 138, 143,
	197, 160, 162, 143, 0, 138, 143, 160,
	162, 143, 0, 138, 143, 0, 196, 160,
	162, 143, 138, 140, 142, 167, 160, 162,
	178, 32, 138, 140, 142, 33, 32, 167,
	160, 162, 199, 178, 138, 202, 204, 67,
	261, 229, 222, 224, 262, 240, 138, 203,
	204, 66, 261, 229, 222, 224, 240, 138,
	204, 66, 261, 229, 222, 224, 240, 138,
	205, 221, 258, 222, 224, 205, 138, 206,
	208, 65, 257, 229, 222, 224, 256, 240,
	138, 207, 208, 229, 222, 224, 240, 64,
	138, 208, 229, 222, 224, 240, 64, 138,
	209, 221, 253, 222, 224, 209, 138, 210,
	212, 63, 252, 229, 222, 224, 251, 240,
	138, 211, 212, 229, 222, 224, 240, 62,
	138, 212, 229, 222, 224, 240, 62, 138,
	213, 221, 248, 222, 224, 213, 138, 214,
	216, 61, 247, 229, 222, 224, 246, 240,
	138, 215, 216, 229, 222, 224, 240, 60,
	138, 216, 229, 222, 224, 240, 60, 138,
	217, 221, 243, 222, 224, 217, 138, 218,
	220, 59, 242, 229, 222, 224, 241, 240,
	138, 219, 220, 229, 222, 224, 240, 35,
	138, 220, 229, 222, 224, 240, 35, 138,
	221, 227, 222, 224, 138, 222, 224, 34,
	138, 223, 226, 224, 138, 224, 138, 225,
	138, 138, 138, 223, 224, 138, 221, 222,
	224, 34, 138, 34, 227, 222, 224, 138,
	230, 231, 38, 56, 232, 222, 224, 138,
	231, 38, 56, 232, 222, 224, 138, 232,
	222, 224, 38, 138, 233, 234, 41, 53,
	235, 222, 224, 138, 234, 41, 53, 235,
	222, 224, 138, 235, 222, 224, 41, 138,
	236, 237, 44, 50, 238, 222, 224, 138,
	237, 44, 50, 238, 222, 224, 138, 238,
	222, 224, 44, 138, 239, 221, 34, 47,
	222, 224, 138, 221, 34, 47, 222, 224,
	138, 220, 229, 222, 224, 35, 138, 218,
	220, 229, 222, 224, 240, 35, 138, 218,
	220, 59, 35, 229, 222, 224, 241, 240,
	138, 217, 244, 222, 224, 217, 34, 138,
	217, 222, 224, 217, 34, 138, 217, 34,
	243, 222, 224, 217, 138, 214, 216, 229,
	222, 224, 240, 60, 138, 214, 216, 61,
	60, 229, 222, 224, 246, 240, 138, 213,
	249, 222, 224, 213, 34, 138, 213, 222,
	224, 213, 34, 138, 213, 34, 248, 222,
	224, 213, 138, 210, 212, 229, 222, 224,
	240, 62, 138, 210, 212, 63, 62, 229,
	222, 224, 251, 240, 138, 209, 254, 222,
	224, 209, 34, 138, 209, 222, 224, 209,
	34, 138, 209, 34, 253, 222, 224, 209,
	138, 206, 208, 229, 222, 224, 240, 64,
	138, 206, 208, 65, 64, 229, 222, 224,
	256, 240, 138, 205, 259, 222, 224, 205,
	34, 138, 205, 222, 224, 205, 34, 138,
	205, 34, 258, 222, 224, 205, 138, 260,
	229, 222, 36, 138, 202, 204, 66, 261,
	229, 222, 224, 240, 138, 264, 265, 290,
	283, 285, 301, 100, 138, 265, 290, 283,
	285, 301, 100, 138, 266, 282, 319, 283,
	285, 266, 138, 267, 269, 99, 318, 290,
	283, 285, 317, 301, 138, 268, 269, 290,
	283, 285, 301, 98, 138, 269, 290, 283,
	285, 301, 98, 138, 270, 282, 314, 283,
	285, 270, 138, 271, 273, 97, 313, 290,
	283, 285, 312, 301, 138, 272, 273, 290,
	283, 285, 301, 96, 138, 273, 290, 283,
	285, 301, 96, 138, 274, 282, 309, 283,
	285, 274, 138, 275, 277, 95, 308, 290,
	283, 285, 307, 301, 138, 276, 277, 290,
	283, 285, 301, 94, 138, 277, 290, 283,
	285, 301, 94, 138, 278, 282, 304, 283,
	285, 278, 138, 279, 281, 93, 303, 290,
	283, 285, 302, 301, 138, 280, 281, 290,
	283, 285, 301, 69, 138, 281, 290, 283,
	285, 301, 69, 138, 282, 288, 283, 285,
	138, 283, 285, 68, 138, 284, 287, 285,
	138, 285, 138, 286, 138, 138, 138, 284,
	285, 138, 282, 283, 285, 68, 138, 68,
	288, 283, 285, 138, 291, 292, 72, 90,
	293, 283, 285, 138, 292, 72, 90, 293,
	283, 285, 138, 293, 283, 285, 72, 138,
	294, 295, 75, 87, 296, 283, 285, 138,
	295, 75, 87, 296, 283, 285, 138, 296,
	283, 285, 75, 138, 297, 298, 78, 84,
	299, 283, 285, 138, 298, 78, 84, 299,
	283, 285, 138, 299, 283, 285, 78, 138,
	300, 282, 68, 81, 283, 285, 138, 282,
	68, 81, 283, 285, 138, 281, 290, 283,
	285, 69, 138, 279, 281, 290, 283, 285,
	301, 69, 138, 279, 281, 93, 69, 290,
	283, 285, 302, 301, 138, 278, 305, 283,
	285, 278, 68, 138, 278, 283, 285, 278,
	68, 138, 278, 68, 304, 283, 285, 278,
	138, 275, 277, 290, 283, 285, 301, 94,
	138, 275, 277, 95, 94, 290, 283, 285,
	307, 301, 138, 274, 310, 283, 285, 274,
	68, 138, 274, 283, 285, 274, 68, 138,
	274, 68, 309, 283, 285, 274, 138, 271,
	273, 290, 283, 285, 301, 96, 138, 271,
	273, 97, 96, 290, 283, 285, 312, 301,
	138, 270, 315, 283, 285, 270, 68, 138,
	270, 283, 285, 270, 68, 138, 270, 68,
	314, 283, 285, 270, 138, 267, 269, 290,
	283, 285, 301, 98, 138, 267, 269, 99,
	98, 290, 283, 285, 317, 301, 138, 266,
	320, 283, 285, 266, 68, 138, 266, 283,
	285, 266, 68, 138, 266, 68, 319, 283,
	285, 266, 138, 321, 290, 283, 323, 70,
	138, 263, 265, 290, 283, 285, 301, 100,
	138, 321, 290, 283, 70, 138, 326, 328,
	134, 133, 353, 346, 348, 385, 364, 138,
	327, 328, 353, 346, 348, 364, 133, 138,
	328, 353, 346, 348, 364, 133, 138, 329,
	345, 382, 346, 348, 329, 138, 330, 332,
	132, 381, 353, 346, 348, 380, 364, 138,
	331, 332, 353, 346, 348, 364, 131, 138,
	332, 353, 346, 348, 364, 131, 138, 333,
	345, 377, 346, 348, 333, 138, 334, 336,
	130, 376, 353, 346, 348, 375, 364, 138,
	335, 336, 353, 346, 348, 364, 129, 138,
	336, 353, 346, 348, 364, 129, 138, 337,
	345, 372, 346, 348, 337, 138, 338, 340,
	128, 371, 353, 346, 348, 370, 364, 138,
	339, 340, 353, 346, 348, 364, 127, 138,
	340, 353, 346, 348, 364, 127, 138, 341,
	345, 367, 346, 348, 341, 138, 342, 344,
	126, 366, 353, 346, 348, 365, 364, 138,
	343, 344, 353, 346, 348, 364, 102, 138,
	344, 353, 346, 348, 364, 102, 138, 345,
	351, 346, 348, 138, 346, 348, 101, 138,
	347, 350, 348, 138, 348, 138, 349, 138,
	138, 138, 347, 348, 138, 345, 346, 348,
	101, 138, 101, 351, 346, 348, 138, 354,
	355, 105, 123, 356, 346, 348, 138, 355,
	105, 123, 356, 346, 348, 138, 356, 346,
	348, 105, 138, 357, 358, 108, 120, 359,
	346, 348, 138, 358, 108, 120, 359, 346,
	348, 138, 359, 346, 348, 108, 138, 360,
	361, 111, 117, 362, 346, 348, 138, 361,
	111, 117, 362, 346, 348, 138, 362, 346,
	348, 111, 138, 363, 345, 101, 114, 346,
	348, 138, 345, 101, 114, 346, 348, 138,
	344, 353, 346, 348, 102, 138, 342, 344,
	353, 346, 348, 364, 102, 138, 342, 344,
	126, 102, 353, 346, 348, 365, 364, 138,
	341, 368, 346, 348, 341, 101, 138, 341,
	346, 348, 341, 101, 138, 341, 101, 367,
	346, 348, 341, 138, 338, 340, 353, 346,
	348, 364, 127, 138, 338, 340, 128, 127,
	353, 346, 348, 370, 364, 138, 337, 373,
	346, 348, 337, 101, 138, 337, 346, 348,
	337, 101, 138, 337, 101, 372, 346, 348,
	337, 138, 334, 336, 353, 346, 348, 364,
	129, 138, 334, 336, 130, 129, 353, 346,
	348, 375, 364, 138, 333, 378, 346, 348,
	333, 101, 138, 333, 346, 348, 333, 101,
	138, 333, 101, 377, 346, 348, 333, 138,
	330, 332, 353, 346, 348, 364, 131, 138,
	330, 332, 132, 131, 353, 346, 348, 380,
	364, 138, 329, 383, 346, 348, 329, 101,
	138, 329, 346, 348, 329, 101, 138, 329,
	101, 382, 346, 348, 329, 138, 326, 328,
	353, 346, 348, 364, 133, 138, 139, 201,
	263, 265, 135, 100, 290, 283, 285, 323,
	139, 301, 325, 138, 140, 388, 33, 200,
	167, 160, 162, 199, 178, 138, 143, 201,
	263, 265, 389, 395, 290, 390, 392, 325,
	323, 143, 301, 138, 321, 290, 390, 162,
	323, 136, 138, 391, 394, 392, 138, 392,
	138, 393, 138, 138, 138, 391, 392, 138,
	143, 197, 321, 290, 390, 162, 143, 136,
	138, 397, 398, 400, 137, 138, 398, 400,
	137, 138, 399, 402, 400, 138, 400, 138,
	401, 138, 138, 138, 399, 400, 138, 139,
	325, 139, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 0
};

static const char _indic_syllable_machine_cond_actions[] = {
	0, 1, 2, 2, 0, 0, 1, 2,
	0, 1, 2, 1, 2, 0, 0, 1,
	2, 0, 1, 2, 1, 2, 0, 0,
	1, 2, 0, 1, 2, 1, 2, 0,
	0, 1, 2, 0, 1, 2, 1, 0,
	0, 1, 0, 1, 2, 1, 0, 2,
	0, 0, 1, 0, 1, 2, 1, 0,
	2, 0, 0, 1, 0, 1, 2, 1,
	0, 2, 0, 0, 1, 0, 1, 2,
	1, 2, 2, 0, 2, 0, 1, 2,
	2, 0, 0, 1, 2, 2, 0, 2,
	0, 1, 2, 2, 0, 0, 1, 2,
	2, 0, 2, 0, 1, 2, 2, 0,
	0, 1, 2, 2, 0, 2, 0, 1,
	2, 2, 0, 0, 1, 2, 2, 0,
	2, 0, 1, 0, 3, 2, 2, 0,
	0, 3, 2, 0, 3, 2, 3, 2,
	0, 0, 3, 2, 0, 3, 2, 3,
	2, 0, 0, 3, 2, 0, 3, 2,
	3, 2, 0, 0, 3, 2, 0, 3,
	2, 3, 0, 0, 3, 0, 3, 2,
	3, 0, 2, 0, 0, 3, 0, 3,
	2, 3, 0, 2, 0, 0, 3, 0,
	3, 2, 3, 0, 2, 0, 0, 3,
	0, 3, 2, 3, 2, 2, 0, 2,
	0, 3, 2, 2, 0, 0, 3, 2,
	2, 0, 2, 0, 3, 2, 2, 0,
	0, 3, 2, 2, 0, 2, 0, 3,
	2, 2, 0, 0, 3, 2, 2, 0,
	2, 0, 3, 2, 2, 0, 0, 3,
	2, 2, 0, 2, 0, 3, 0, 4,
	2, 2, 0, 0, 4, 2, 0, 5,
	2, 5, 2, 0, 0, 4, 2, 0,
	4, 2, 4, 2, 0, 0, 4, 2,
	0, 4, 2, 4, 2, 0, 0, 4,
	2, 0, 4, 2, 4, 0, 0, 4,
	0, 4, 2, 4, 0, 2, 0, 0,
	4, 0, 4, 2, 4, 0, 2, 0,
	0, 4, 0, 4, 2, 4, 0, 2,
	0, 0, 4, 0, 4, 2, 4, 2,
	2, 0, 6, 0, 4, 2, 2, 0,
	0, 4, 2, 2, 0, 6, 0, 4,
	2, 2, 0, 0, 4, 2, 2, 0,
	6, 0, 4, 2, 2, 0, 0, 4,
	2, 2, 0, 6, 0, 4, 2, 2,
	0, 0, 4, 0, 7, 2, 2, 0,
	0, 7, 2, 0, 7, 2, 7, 2,
	0, 0, 7, 2, 0, 7, 2, 7,
	2, 0, 0, 7, 2, 0, 7, 2,
	7, 2, 0, 0, 7, 2, 0, 7,
	2, 7, 0, 0, 7, 0, 7, 2,
	7, 0, 2, 0, 0, 7, 0, 7,
	2, 7, 0, 2, 0, 0, 7, 0,
	7, 2, 7, 0, 2, 0, 0, 7,
	0, 7, 2, 7, 2, 2, 0, 2,
	0, 7, 2, 2, 0, 0, 7, 2,
	2, 0, 2, 0, 7, 2, 2, 0,
	0, 7, 2, 2, 0, 2, 0, 7,
	2, 2, 0, 0, 7, 2, 2, 0,
	2, 0, 7, 2, 2, 0, 0, 7,
	2, 2, 0, 2, 0, 7, 2, 2,
	0, 6, 0, 4, 2, 0, 0, 1,
	0, 8, 2, 2, 6, 0, 12, 12,
	2, 0, 0, 6, 6, 2, 6, 2,
	0, 2, 11, 2, 0, 0, 2, 2,
	0, 0, 2, 2, 13, 2, 0, 2,
	0, 0, 2, 0, 13, 0, 2, 0,
	0, 2, 0, 13, 2, 2, 2, 0,
	0, 2, 13, 2, 0, 0, 2, 2,
	0, 0, 2, 2, 13, 2, 0, 2,
	0, 0, 2, 0, 13, 0, 2, 0,
	0, 2, 0, 13, 2, 2, 2, 0,
	0, 2, 13, 2, 0, 0, 2, 2,
	0, 0, 2, 2, 13, 2, 0, 2,
	0, 0, 2, 0, 13, 0, 2, 0,
	0, 2, 0, 13, 2, 2, 2, 0,
	0, 2, 13, 2, 0, 0, 2, 2,
	0, 0, 2, 2, 13, 2, 0, 2,
	0, 0, 2, 0, 13, 0, 2, 0,
	0, 2, 0, 13, 2, 2, 2, 0,
	0, 2, 13, 2, 0, 0, 2, 2,
	0, 0, 2, 2, 13, 2, 0, 2,
	0, 0, 2, 0, 13, 0, 2, 0,
	0, 2, 0, 13, 2, 2, 0, 0,
	13, 0, 0, 0, 13, 0, 0, 0,
	13, 0, 13, 0, 13, 14, 13, 0,
	0, 13, 2, 0, 0, 0, 13, 0,
	2, 0, 0, 13, 2, 2, 0, 0,
	2, 0, 0, 13, 2, 0, 0, 2,
	0, 0, 13, 2, 0, 0, 0, 13,
	2, 2, 0, 0, 2, 0, 0, 13,
	2, 0, 0, 2, 0, 0, 13, 2,
	0, 0, 0, 13, 2, 2, 0, 0,
	2, 0, 0, 13, 2, 0, 0, 2,
	0, 0, 13, 2, 0, 0, 0, 13,
	2, 2, 0, 0, 0, 0, 13, 2,
	0, 0, 0, 0, 13, 0, 2, 0,
	0, 0, 13, 2, 0, 2, 0, 0,
	2, 0, 13, 2, 0, 0, 0, 2,
	0, 0, 2, 2, 13, 2, 2, 0,
	0, 2, 0, 13, 2, 0, 0, 2,
	0, 13, 2, 0, 2, 0, 0, 2,
	13, 2, 0, 2, 0, 0, 2, 0,
	13, 2, 0, 0, 0, 2, 0, 0,
	2, 2, 13, 2, 2, 0, 0, 2,
	0, 13, 2, 0, 0, 2, 0, 13,
	2, 0, 2, 0, 0, 2, 13, 2,
	0, 2, 0, 0, 2, 0, 13, 2,
	0, 0, 0, 2, 0, 0, 2, 2,
	13, 2, 2, 0, 0, 2, 0, 13,
	2, 0, 0, 2, 0, 13, 2, 0,
	2, 0, 0, 2, 13, 2, 0, 2,
	0, 0, 2, 0, 13, 2, 0, 0,
	0, 2, 0, 0, 2, 2, 13, 2,
	2, 0, 0, 2, 0, 13, 2, 0,
	0, 2, 0, 13, 2, 0, 2, 0,
	0, 2, 13, 2, 0, 2, 0, 0,
	2, 0, 13, 2, 0, 0, 0, 2,
	0, 0, 2, 2, 13, 2, 0, 0,
	2, 2, 0, 0, 2, 2, 15, 2,
	0, 0, 2, 2, 0, 0, 2, 15,
	0, 0, 2, 2, 0, 0, 2, 15,
	2, 2, 2, 0, 0, 2, 15, 2,
	0, 0, 2, 2, 0, 0, 2, 2,
	15, 2, 0, 2, 0, 0, 2, 0,
	15, 0, 2, 0, 0, 2, 0, 15,
	2, 2, 2, 0, 0, 2, 15, 2,
	0, 0, 2, 2, 0, 0, 2, 2,
	15, 2, 0, 2, 0, 0, 2, 0,
	15, 0, 2, 0, 0, 2, 0, 15,
	2, 2, 2, 0, 0, 2, 15, 2,
	0, 0, 2, 2, 0, 0, 2, 2,
	15, 2, 0, 2, 0, 0, 2, 0,
	15, 0, 2, 0, 0, 2, 0, 15,
	2, 2, 2, 0, 0, 2, 15, 2,
	0, 0, 2, 2, 0, 0, 2, 2,
	15, 2, 0, 2, 0, 0, 2, 0,
	15, 0, 2, 0, 0, 2, 0, 15,
	2, 2, 0, 0, 15, 0, 0, 0,
	15, 0, 0, 0, 15, 0, 15, 0,
	15, 16, 15, 0, 0, 15, 2, 0,
	0, 0, 15, 0, 2, 0, 0, 15,
	2, 2, 0, 0, 2, 0, 0, 15,
	2, 0, 0, 2, 0, 0, 15, 2,
	0, 0, 0, 15, 2, 2, 0, 0,
	2, 0, 0, 15, 2, 0, 0, 2,
	0, 0, 15, 2, 0, 0, 0, 15,
	2, 2, 0, 0, 2, 0, 0, 15,
	2, 0, 0, 2, 0, 0, 15, 2,
	0, 0, 0, 15, 2, 2, 0, 0,
	0, 0, 15, 2, 0, 0, 0, 0,
	15, 0, 2, 0, 0, 0, 15, 2,
	0, 2, 0, 0, 2, 0, 15, 2,
	0, 0, 0, 2, 0, 0, 2, 2,
	15, 2, 2, 0, 0, 2, 0, 15,
	2, 0, 0, 2, 0, 15, 2, 0,
	2, 0, 0, 2, 15, 2, 0, 2,
	0, 0, 2, 0, 15, 2, 0, 0,
	0, 2, 0, 0, 2, 2, 15, 2,
	2, 0, 0, 2, 0, 15, 2, 0,
	0, 2, 0, 15, 2, 0, 2, 0,
	0, 2, 15, 2, 0, 2, 0, 0,
	2, 0, 15, 2, 0, 0, 0, 2,
	0, 0, 2, 2, 15, 2, 2, 0,
	0, 2, 0, 15, 2, 0, 0, 2,
	0, 15, 2, 0, 2, 0, 0, 2,
	15, 2, 0, 2, 0, 0, 2, 0,
	15, 2, 0, 0, 0, 2, 0, 0,
	2, 2, 15, 2, 2, 0, 0, 2,
	0, 15, 2, 0, 0, 2, 0, 15,
	2, 0, 2, 0, 0, 2, 15, 2,
	2, 0, 0, 15, 2, 0, 0, 2,
	2, 0, 0, 2, 15, 6, 0, 2,
	0, 0, 6, 0, 17, 0, 2, 0,
	0, 6, 0, 17, 6, 2, 2, 0,
	0, 6, 17, 6, 0, 0, 6, 2,
	0, 0, 6, 6, 17, 6, 0, 2,
	0, 0, 6, 0, 17, 0, 2, 0,
	0, 6, 0, 17, 6, 2, 2, 0,
	0, 6, 17, 6, 0, 0, 6, 2,
	0, 0, 6, 6, 17, 6, 0, 2,
	0, 0, 6, 0, 17, 0, 2, 0,
	0, 6, 0, 17, 6, 2, 2, 0,
	0, 6, 17, 6, 0, 0, 6, 2,
	0, 0, 6, 6, 17, 6, 0, 2,
	0, 0, 6, 0, 17, 0, 2, 0,
	0, 6, 0, 17, 6, 2, 2, 0,
	0, 6, 17, 6, 0, 0, 6, 2,
	0, 0, 6, 6, 17, 6, 0, 2,
	0, 0, 6, 0, 17, 0, 2, 0,
	0, 6, 0, 17, 2, 2, 0, 0,
	17, 0, 0, 0, 17, 0, 0, 0,
	17, 0, 17, 0, 17, 18, 17, 0,
	0, 17, 2, 0, 0, 0, 17, 0,
	2, 0, 0, 17, 2, 2, 0, 0,
	2, 0, 0, 17, 2, 0, 0, 2,
	0, 0, 17, 2, 0, 0, 0, 17,
	2, 2, 0, 0, 2, 0, 0, 17,
	2, 0, 0, 2, 0, 0, 17, 2,
	0, 0, 0, 17, 2, 2, 0, 0,
	2, 0, 0, 17, 2, 0, 0, 2,
	0, 0, 17, 2, 0, 0, 0, 17,
	2, 2, 0, 0, 0, 0, 17, 2,
	0, 0, 0, 0, 17, 0, 2, 0,
	0, 0, 17, 6, 0, 2, 0, 0,
	6, 0, 17, 6, 0, 0, 0, 2,
	0, 0, 6, 6, 17, 6, 2, 0,
	0, 6, 0, 17, 6, 0, 0, 6,
	0, 17, 6, 0, 2, 0, 0, 6,
	17, 6, 0, 2, 0, 0, 6, 0,
	17, 6, 0, 0, 0, 2, 0, 0,
	6, 6, 17, 6, 2, 0, 0, 6,
	0, 17, 6, 0, 0, 6, 0, 17,
	6, 0, 2, 0, 0, 6, 17, 6,
	0, 2, 0, 0, 6, 0, 17, 6,
	0, 0, 0, 2, 0, 0, 6, 6,
	17, 6, 2, 0, 0, 6, 0, 17,
	6, 0, 0, 6, 0, 17, 6, 0,
	2, 0, 0, 6, 17, 6, 0, 2,
	0, 0, 6, 0, 17, 6, 0, 0,
	0, 2, 0, 0, 6, 6, 17, 6,
	2, 0, 0, 6, 0, 17, 6, 0,
	0, 6, 0, 17, 6, 0, 2, 0,
	0, 6, 17, 2, 2, 0, 6, 0,
	19, 6, 0, 2, 0, 0, 6, 0,
	17, 2, 2, 0, 0, 19, 2, 0,
	0, 0, 2, 0, 0, 2, 2, 20,
	2, 0, 2, 0, 0, 2, 0, 20,
	0, 2, 0, 0, 2, 0, 20, 2,
	2, 2, 0, 0, 2, 20, 2, 0,
	0, 2, 2, 0, 0, 2, 2, 20,
	2, 0, 2, 0, 0, 2, 0, 20,
	0, 2, 0, 0, 2, 0, 20, 2,
	2, 2, 0, 0, 2, 20, 2, 0,
	0, 2, 2, 0, 0, 2, 2, 20,
	2, 0, 2, 0, 0, 2, 0, 20,
	0, 2, 0, 0, 2, 0, 20, 2,
	2, 2, 0, 0, 2, 20, 2, 0,
	0, 2, 2, 0, 0, 2, 2, 20,
	2, 0, 2, 0, 0, 2, 0, 20,
	0, 2, 0, 0, 2, 0, 20, 2,
	2, 2, 0, 0, 2, 20, 2, 0,
	0, 2, 2, 0, 0, 2, 2, 20,
	2, 0, 2, 0, 0, 2, 0, 20,
	0, 2, 0, 0, 2, 0, 20, 2,
	2, 0, 0, 20, 0, 0, 0, 20,
	0, 0, 0, 20, 0, 20, 0, 20,
	21, 20, 0, 0, 20, 2, 0, 0,
	0, 20, 0, 2, 0, 0, 20, 2,
	2, 0, 0, 2, 0, 0, 20, 2,
	0, 0, 2, 0, 0, 20, 2, 0,
	0, 0, 20, 2, 2, 0, 0, 2,
	0, 0, 20, 2, 0, 0, 2, 0,
	0, 20, 2, 0, 0, 0, 20, 2,
	2, 0, 0, 2, 0, 0, 20, 2,
	0, 0, 2, 0, 0, 20, 2, 0,
	0, 0, 20, 2, 2, 0, 0, 0,
	0, 20, 2, 0, 0, 0, 0, 20,
	0, 2, 0, 0, 0, 20, 2, 0,
	2, 0, 0, 2, 0, 20, 2, 0,
	0, 0, 2, 0, 0, 2, 2, 20,
	2, 2, 0, 0, 2, 0, 20, 2,
	0, 0, 2, 0, 20, 2, 0, 2,
	0, 0, 2, 20, 2, 0, 2, 0,
	0, 2, 0, 20, 2, 0, 0, 0,
	2, 0, 0, 2, 2, 20, 2, 2,
	0, 0, 2, 0, 20, 2, 0, 0,
	2, 0, 20, 2, 0, 2, 0, 0,
	2, 20, 2, 0, 2, 0, 0, 2,
	0, 20, 2, 0, 0, 0, 2, 0,
	0, 2, 2, 20, 2, 2, 0, 0,
	2, 0, 20, 2, 0, 0, 2, 0,
	20, 2, 0, 2, 0, 0, 2, 20,
	2, 0, 2, 0, 0, 2, 0, 20,
	2, 0, 0, 0, 2, 0, 0, 2,
	2, 20, 2, 2, 0, 0, 2, 0,
	20, 2, 0, 0, 2, 0, 20, 2,
	0, 2, 0, 0, 2, 20, 2, 0,
	2, 0, 0, 2, 0, 20, 2, 2,
	6, 0, 0, 0, 2, 0, 0, 6,
	2, 6, 2, 17, 2, 0, 0, 2,
	2, 0, 0, 2, 2, 13, 2, 2,
	6, 0, 22, 22, 2, 0, 0, 2,
	6, 2, 6, 13, 2, 2, 0, 0,
	6, 0, 13, 0, 0, 0, 13, 0,
	13, 0, 13, 14, 13, 0, 0, 13,
	2, 2, 2, 2, 0, 0, 2, 0,
	13, 2, 0, 0, 0, 23, 0, 0,
	0, 23, 0, 0, 0, 23, 0, 23,
	0, 23, 24, 23, 0, 0, 23, 2,
	2, 2, 19, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4,
	4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 4, 1, 8, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15,
	15, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 19, 17, 19, 20,
	20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 17, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 23, 23,
	23, 23, 23, 23, 23, 19, 0
};

static const char _indic_syllable_machine_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 9, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0
};

static const char _indic_syllable_machine_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 10, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0
};

static const char _indic_syllable_machine_eof_cond_spaces[] = {
	-1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 0
};

static const char _indic_syllable_machine_eof_cond_key_offs[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0
};

static const char _indic_syllable_machine_eof_cond_key_lens[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0
};

static const char _indic_syllable_machine_eof_cond_keys[] = {
	0
};

static const short _indic_syllable_machine_eof_trans[] = {
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 0, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554,
	2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594,
	2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634,
	2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674,
	2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714,
	2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 0
};

static const char _indic_syllable_machine_nfa_targs[] = {
	0, 0
};

static const char _indic_syllable_machine_nfa_offsets[] = {
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0
};

static const char _indic_syllable_machine_nfa_push_actions[] = {
	0, 0
};

static const char _indic_syllable_machine_nfa_pop_trans[] = {
	0, 0
};

static const int indic_syllable_machine_start = 138;
static const int indic_syllable_machine_first_final = 138;
static const int indic_syllable_machine_error = -1;

static const int indic_syllable_machine_en_main = 138;





#define found_syllable(syllable_type) \
HB_STMT_START { \
	if (0) fprintf (stderr, "syllable %d..%d %s\n", ts, te, #syllable_type); \
	for (unsigned int i = ts; i < te; i++) \
	info[i].syllable() = (syllable_serial << 4) | syllable_type; \
	syllable_serial++; \
	if (unlikely (syllable_serial == 16)) syllable_serial=1; \
} HB_STMT_END

static void
find_syllables (hb_buffer_t *buffer)
{
	unsigned int p, pe, eof, ts, te, act;
	int cs;
	hb_glyph_info_t *info = buffer->info;
	
	{
		cs = (int)indic_syllable_machine_start;
		ts = 0;
		te = 0;
		act = 0;
	}
	
	
	p=0;
	pe = eof = buffer->len;
	
	unsigned int syllable_serial=1;
	
	{
		int _cpc;
		int _klen;const char * _cekeys;unsigned int _trans = 0;const unsigned char * _keys;	 {
			if ( p == pe )
			goto _test_eof;
			_resume:  {
				switch ( _indic_syllable_machine_from_state_actions[cs] ) {
					case 10:  {
						{
							#line 1 "NONE"
							{ts = p;}}
						
						break; }
				}
				
				_keys = ( _indic_syllable_machine_trans_keys + (_indic_syllable_machine_key_offsets[cs]));
				_trans = (unsigned int)_indic_syllable_machine_index_offsets[cs];
				
				_klen = (int)_indic_syllable_machine_single_lengths[cs];
				if ( _klen > 0 ) {
					const unsigned char *_lower = _keys;
					const unsigned char *_upper = _keys + _klen - 1;
					const unsigned char *_mid;
					while ( 1 ) {
						if ( _upper < _lower )
						break;
						
						_mid = _lower + ((_upper-_lower) >> 1);
						if ( (info[p].indic_category()) < (*( _mid)) )
						_upper = _mid - 1;
						else if ( (info[p].indic_category()) > (*( _mid)) )
						_lower = _mid + 1;
						else {
							_trans += (unsigned int)(_mid - _keys);
							goto _match;
						}
					}
					_keys += _klen;
					_trans += (unsigned int)_klen;
				}
				
				_klen = (int)_indic_syllable_machine_range_lengths[cs];
				if ( _klen > 0 ) {
					const unsigned char *_lower = _keys;
					const unsigned char *_upper = _keys + (_klen<<1) - 2;
					const unsigned char *_mid;
					while ( 1 ) {
						if ( _upper < _lower )
						break;
						
						_mid = _lower + (((_upper-_lower) >> 1) & ~1);
						if ( (info[p].indic_category()) < (*( _mid)) )
						_upper = _mid - 2;
						else if ( (info[p].indic_category()) > (*( _mid + 1)) )
						_lower = _mid + 2;
						else {
							_trans += (unsigned int)((_mid - _keys)>>1);
							goto _match;
						}
					}
					_trans += (unsigned int)_klen;
				}
				
				_match:  {
					goto _match_cond;
				}
			}
			_match_cond:  {
				cs = (int)_indic_syllable_machine_cond_targs[_trans];
				
				if ( _indic_syllable_machine_cond_actions[_trans] == 0 )
				goto _again;
				
				switch ( _indic_syllable_machine_cond_actions[_trans] ) {
					case 2:  {
						{
							#line 1 "NONE"
							{te = p+1;}}
						
						break; }
					case 14:  {
						{
							#line 84 "hb-ot-shape-complex-indic-machine.rl"
							{te = p+1;{
									#line 84 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (consonant_syllable); }}}
						
						break; }
					case 16:  {
						{
							#line 85 "hb-ot-shape-complex-indic-machine.rl"
							{te = p+1;{
									#line 85 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (vowel_syllable); }}}
						
						break; }
					case 21:  {
						{
							#line 86 "hb-ot-shape-complex-indic-machine.rl"
							{te = p+1;{
									#line 86 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (standalone_cluster); }}}
						
						break; }
					case 24:  {
						{
							#line 87 "hb-ot-shape-complex-indic-machine.rl"
							{te = p+1;{
									#line 87 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (symbol_cluster); }}}
						
						break; }
					case 18:  {
						{
							#line 88 "hb-ot-shape-complex-indic-machine.rl"
							{te = p+1;{
									#line 88 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (broken_cluster); }}}
						
						break; }
					case 11:  {
						{
							#line 89 "hb-ot-shape-complex-indic-machine.rl"
							{te = p+1;{
									#line 89 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (non_indic_cluster); }}}
						
						break; }
					case 13:  {
						{
							#line 84 "hb-ot-shape-complex-indic-machine.rl"
							{te = p;p = p - 1;{
									#line 84 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (consonant_syllable); }}}
						
						break; }
					case 15:  {
						{
							#line 85 "hb-ot-shape-complex-indic-machine.rl"
							{te = p;p = p - 1;{
									#line 85 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (vowel_syllable); }}}
						
						break; }
					case 20:  {
						{
							#line 86 "hb-ot-shape-complex-indic-machine.rl"
							{te = p;p = p - 1;{
									#line 86 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (standalone_cluster); }}}
						
						break; }
					case 23:  {
						{
							#line 87 "hb-ot-shape-complex-indic-machine.rl"
							{te = p;p = p - 1;{
									#line 87 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (symbol_cluster); }}}
						
						break; }
					case 17:  {
						{
							#line 88 "hb-ot-shape-complex-indic-machine.rl"
							{te = p;p = p - 1;{
									#line 88 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (broken_cluster); }}}
						
						break; }
					case 19:  {
						{
							#line 89 "hb-ot-shape-complex-indic-machine.rl"
							{te = p;p = p - 1;{
									#line 89 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (non_indic_cluster); }}}
						
						break; }
					case 1:  {
						{
							#line 84 "hb-ot-shape-complex-indic-machine.rl"
							{p = ((te))-1;
								{
									#line 84 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (consonant_syllable); }}}
						
						break; }
					case 3:  {
						{
							#line 85 "hb-ot-shape-complex-indic-machine.rl"
							{p = ((te))-1;
								{
									#line 85 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (vowel_syllable); }}}
						
						break; }
					case 7:  {
						{
							#line 86 "hb-ot-shape-complex-indic-machine.rl"
							{p = ((te))-1;
								{
									#line 86 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (standalone_cluster); }}}
						
						break; }
					case 8:  {
						{
							#line 87 "hb-ot-shape-complex-indic-machine.rl"
							{p = ((te))-1;
								{
									#line 87 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (symbol_cluster); }}}
						
						break; }
					case 4:  {
						{
							#line 88 "hb-ot-shape-complex-indic-machine.rl"
							{p = ((te))-1;
								{
									#line 88 "hb-ot-shape-complex-indic-machine.rl"
									found_syllable (broken_cluster); }}}
						
						break; }
					case 5:  {
						{
							#line 1 "NONE"
							{switch( act ) {
									case 1:  {
										p = ((te))-1;
										{
											#line 84 "hb-ot-shape-complex-indic-machine.rl"
											found_syllable (consonant_syllable); } break; }
									case 5:  {
										p = ((te))-1;
										{
											#line 88 "hb-ot-shape-complex-indic-machine.rl"
											found_syllable (broken_cluster); } break; }
									case 6:  {
										p = ((te))-1;
										{
											#line 89 "hb-ot-shape-complex-indic-machine.rl"
											found_syllable (non_indic_cluster); } break; }
								}}
						}
						
						break; }
					case 22:  {
						{
							#line 1 "NONE"
							{te = p+1;}}
						{
							#line 84 "hb-ot-shape-complex-indic-machine.rl"
							{act = 1;}}
						
						break; }
					case 6:  {
						{
							#line 1 "NONE"
							{te = p+1;}}
						{
							#line 88 "hb-ot-shape-complex-indic-machine.rl"
							{act = 5;}}
						
						break; }
					case 12:  {
						{
							#line 1 "NONE"
							{te = p+1;}}
						{
							#line 89 "hb-ot-shape-complex-indic-machine.rl"
							{act = 6;}}
						
						break; }
				}
				
				
			}
			_again:  {
				switch ( _indic_syllable_machine_to_state_actions[cs] ) {
					case 9:  {
						{
							#line 1 "NONE"
							{ts = 0;}}
						
						break; }
				}
				
				p += 1;
				if ( p != pe )
				goto _resume;
			}
			_test_eof:  { {}
				if ( p == eof )
				{
					if ( _indic_syllable_machine_eof_cond_spaces[cs] != -1 ) {
						_cekeys = ( _indic_syllable_machine_eof_cond_keys + (_indic_syllable_machine_eof_cond_key_offs[cs]));
						_klen = (int)_indic_syllable_machine_eof_cond_key_lens[cs];
						_cpc = 0;
						{
							const char *_lower = _cekeys;
							const char *_upper = _cekeys + _klen - 1;
							const char *_mid;
							while ( 1 ) {
								if ( _upper < _lower )
								break;
								
								_mid = _lower + ((_upper-_lower) >> 1);
								if ( _cpc < (int)(*( _mid)) )
								_upper = _mid - 1;
								else if ( _cpc > (int)(*( _mid)) )
								_lower = _mid + 1;
								else {
									goto _ok;
								}
							}
							cs = -1;
							goto _out;
						}
						_ok: {}
					}
					if ( _indic_syllable_machine_eof_trans[cs] > 0 ) {
						_trans = (unsigned int)_indic_syllable_machine_eof_trans[cs] - 1;
						goto _match_cond;
					}
				}
				
			}
			_out:  { {}
			}
		}
	}
	
}

#endif /* HB_OT_SHAPE_COMPLEX_INDIC_MACHINE_HH */
